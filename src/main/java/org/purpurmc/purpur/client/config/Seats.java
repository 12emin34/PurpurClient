package org.purpurmc.purpur.client.config;

import org.purpurmc.purpur.client.entity.Mob;
import org.purpurmc.purpur.client.entity.Seat;
import org.spongepowered.configurate.objectmapping.ConfigSerializable;

@ConfigSerializable
@SuppressWarnings("CanBeFinal")
public class Seats {
    public Seat axolotl = new Seat(-0.25D, 0.4D, 0.0D);
    public Seat bat = new Seat(-0.25D, 0.5D, 0.0D);
    public Seat bee = new Seat(-0.1D, 0.6D, 0.0D);
    public Seat blaze = new Seat(-0.13D, 0.86D, 0.0D);
    public Seat cat = new Seat(0.0D, 0.4D, 0.0D);
    public Seat caveSpider = new Seat(-0.17D, 0.68D, 0.0D);
    public Seat chicken = new Seat(-0.15D, 0.7D, 0.0D);
    public Seat cod = new Seat(-0.25D, 0.15D, 0.0D);
    public Seat cow = new Seat(-0.21D, 0.84D, 0.0D);
    public Seat creeper = new Seat(-0.13D, 0.83D, 0.0D);
    public Seat dolphin = new Seat(0.05D, 0.6D, 0.0D);
    public Seat donkey = new Seat(0.0D, 0.62D, 0.0D);
    public Seat drowned = new Seat(-0.14D, 0.93D, 0.0D);
    public Seat elderGuardian = new Seat(0.0D, 1.07D, 0.0D);
    public Seat enderDragon = new Seat(0.0D, 0.4D, 0.0D);
    public Seat enderman = new Seat(-0.12D, 0.9D, 0.0D);
    public Seat endermite = new Seat(-0.05D, 0.16D, 0.0D);
    public Seat evoker = new Seat(-0.12D, 0.91D, 0.0D);
    public Seat fox = new Seat(-0.25D, 0.6D, 0.0D);
    public Seat ghast = new Seat(0.0D, 0.96D, 0.0D);
    public Seat giant = new Seat(0.0D, 0.98D, 0.0D);
    public Seat glowSquid = new Seat(0.0D, 0.75D, 0.0D);
    public Seat goat = new Seat(-0.1D, 0.7D, 0.0D);
    public Seat guardian = new Seat(-0.15D, 0.94D, 0.0D);
    public Seat hoglin = new Seat(0.0D, 0.92D, 0.0D);
    public Seat horse = new Seat(0.0D, 0.78D, 0.0D);
    public Seat husk = new Seat(-0.13D, 0.98D, 0.0D);
    public Seat illusioner = new Seat(-0.14D, 0.93D, 0.0D);
    public Seat ironGolem = new Seat(-0.25D, 0.7D, 0.0D);
    public Seat llama = new Seat(-0.17D, 0.63D, 0.0D);
    public Seat magmaCube = new Seat(-0.1D, 0.82D, 0.0D);
    public Seat mooshroom = new Seat(-0.21D, 0.84D, 0.0D);
    public Seat mule = new Seat(-0.05D, 0.63D, 0.0D);
    public Seat ocelot = new Seat(0.0D, 0.6D, 0.0D);
    public Seat panda = new Seat(0.0D, 0.85D, 0.0D);
    public Seat parrot = new Seat(-0.15D, 0.3D, 0.0D);
    public Seat phantom = new Seat(-0.1D, 0.23D, 0.0D);
    public Seat pig = new Seat(0.0D, 0.75D, 0.0D);
    public Seat piglin = new Seat(-0.13D, 0.92D, 0.0D);
    public Seat piglinBrute = new Seat(-0.13D, 0.92D, 0.0D);
    public Seat pillager = new Seat(-0.13D, 0.92D, 0.0D);
    public Seat polarBear = new Seat(0.2D, 0.82D, 0.0D);
    public Seat pufferfish = new Seat(-0.1D, 0.25D, 0.0D);
    public Seat rabbit = new Seat(-0.25D, 0.3D, 0.0D);
    public Seat ravager = new Seat(-0.25D, 0.93D, 0.0D);
    public Seat salmon = new Seat(-0.1D, 0.5D, 0.0D);
    public Seat sheep = new Seat(-0.13D, 0.78D, 0.0D);
    public Seat shulker = new Seat(-0.2D, 0.8D, 0.0D);
    public Seat silverfish = new Seat(-0.22D, 0.2D, 0.0D);
    public Seat skeleton = new Seat(-0.13D, 0.9D, 0.0D);
    public Seat skeletonHorse = new Seat(-0.05D, 0.7D, 0.0D);
    public Seat slime = new Seat(-0.1D, 0.82D, 0.0D);
    public Seat snowGolem = new Seat(-0.13D, 0.9D, 0.0D);
    public Seat spider = new Seat(-0.25D, 0.67D, 0.0D);
    public Seat squid = new Seat(0.0D, 0.75D, 0.0D);
    public Seat stray = new Seat(-0.13D, 0.9D, 0.0D);
    public Seat strider = new Seat(-0.2D, 0.91D, 0.0D);
    public Seat traderLlama = new Seat(-0.17D, 0.63D, 0.0D);
    public Seat tropicalFish = new Seat(-0.1D, 0.1D, 0.0D);
    public Seat turtle = new Seat(-0.25D, 0.9D, 0.0D);
    public Seat vex = new Seat(-0.3D, 0.52D, 0.0D);
    public Seat villager = new Seat(-0.13D, 0.92D, 0.0D);
    public Seat vindicator = new Seat(-0.13D, 0.92D, 0.0D);
    public Seat wanderingTrader = new Seat(-0.13D, 0.91D, 0.0D);
    public Seat witch = new Seat(-0.13D, 0.92D, 0.0D);
    public Seat wither = new Seat(-0.1D, 0.94D, 0.0D);
    public Seat witherSkeleton = new Seat(-0.17D, 0.92D, 0.0D);
    public Seat wolf = new Seat(-0.2D, 0.75D, 0.0D);
    public Seat zoglin = new Seat(0.0D, 0.92D, 0.0D);
    public Seat zombie = new Seat(-0.13D, 0.92D, 0.0D);
    public Seat zombieHorse = new Seat(-0.05D, 0.69D, 0.0D);
    public Seat zombieVillager = new Seat(-0.13D, 0.98D, 0.0D);
    public Seat zombifiedPiglin = new Seat(-0.13D, 0.92D, 0.0D);

    public Seat getSeat(Mob mob) {
        return switch (mob) {
            case AXOLOTL -> this.axolotl;
            case BAT -> this.bat;
            case BEE -> this.bee;
            case BLAZE -> this.blaze;
            case CAT -> this.cat;
            case CAVE_SPIDER -> this.caveSpider;
            case CHICKEN -> this.chicken;
            case COD -> this.cod;
            case COW -> this.cow;
            case CREEPER -> this.creeper;
            case DOLPHIN -> this.dolphin;
            case DONKEY -> this.donkey;
            case DROWNED -> this.drowned;
            case ELDER_GUARDIAN -> this.elderGuardian;
            case ENDER_DRAGON -> this.enderDragon;
            case ENDERMAN -> this.enderman;
            case ENDERMITE -> this.endermite;
            case EVOKER -> this.evoker;
            case FOX -> this.fox;
            case GHAST -> this.ghast;
            case GIANT -> this.giant;
            case GLOW_SQUID -> this.glowSquid;
            case GOAT -> this.goat;
            case GUARDIAN -> this.guardian;
            case HOGLIN -> this.hoglin;
            case HORSE -> this.horse;
            case HUSK -> this.husk;
            case ILLUSIONER -> this.illusioner;
            case IRON_GOLEM -> this.ironGolem;
            case LLAMA -> this.llama;
            case MAGMA_CUBE -> this.magmaCube;
            case MOOSHROOM -> this.mooshroom;
            case MULE -> this.mule;
            case OCELOT -> this.ocelot;
            case PANDA -> this.panda;
            case PARROT -> this.parrot;
            case PHANTOM -> this.phantom;
            case PIG -> this.pig;
            case PIGLIN_BRUTE -> this.piglinBrute;
            case PIGLIN -> this.piglin;
            case PILLAGER -> this.pillager;
            case POLAR_BEAR -> this.polarBear;
            case PUFFERFISH -> this.pufferfish;
            case RABBIT -> this.rabbit;
            case RAVAGER -> this.ravager;
            case SALMON -> this.salmon;
            case SHEEP -> this.sheep;
            case SHULKER -> this.shulker;
            case SILVERFISH -> this.silverfish;
            case SKELETON -> this.skeleton;
            case SKELETON_HORSE -> this.skeletonHorse;
            case SLIME -> this.slime;
            case SNOW_GOLEM -> this.snowGolem;
            case SPIDER -> this.spider;
            case SQUID -> this.squid;
            case STRAY -> this.stray;
            case STRIDER -> this.strider;
            case TRADER_LLAMA -> this.traderLlama;
            case TROPICAL_FISH -> this.tropicalFish;
            case TURTLE -> this.turtle;
            case VEX -> this.vex;
            case VILLAGER -> this.villager;
            case VINDICATOR -> this.vindicator;
            case WANDERING_TRADER -> this.wanderingTrader;
            case WITCH -> this.witch;
            case WITHER -> this.wither;
            case WITHER_SKELETON -> this.witherSkeleton;
            case WOLF -> this.wolf;
            case ZOGLIN -> this.zoglin;
            case ZOMBIE -> this.zombie;
            case ZOMBIE_HORSE -> this.zombieHorse;
            case ZOMBIE_VILLAGER -> this.zombieVillager;
            case ZOMBIFIED_PIGLIN -> this.zombifiedPiglin;
        };
    }
}
